@model adminNaturguiden.Models.PictureGroup

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@if (ViewBag.Error != null)
{
    @ViewBag.Error
}

@using (Html.BeginForm("Create", "Pictures", FormMethod.Post,
                                                  new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Picture</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                <label for="Image">Image input</label>
                <input type="file" id="Image" name="Image">
                <p class="help-block">Example block-level help text here.</p>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Picture.FileName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Picture.FileName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Picture.FileName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Picture.Alt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Picture.Alt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Picture.Alt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Picture.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Picture.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Picture.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Picture.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Picture.Owner, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Picture.Owner, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Picture.Format, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    if (Model.Formats != null)
                    {
                        var formats = new List<SelectListItem>();
                        for (int i = 0; i < Model.Formats.Length; i++)
                        {
                            formats.Add(new SelectListItem
                            {
                                Value = Model.Formats[i],
                                Text = Model.Formats[i],
                                Selected = i == 0
                            });
                        }
                        @Html.DropDownListFor(model => model.Picture.Format, formats, htmlAttributes: new { @class = "form-control" })
                    }
                }
                @Html.ValidationMessageFor(model => model.Picture.Format, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @{
                    if (Model.Categories != null)
                    {
                        for (int i = 0; i < Model.Categories.Length; i++)
                        {
                            <div class="checkbox">
                                <label>
                                    <input name="Picture.Categories" type="checkbox" value="@Model.Categories[i].Id" />
                                    @Model.Categories[i].Name
                                </label>
                            </div>
                        }
                    }
                }
            </div>
            </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
