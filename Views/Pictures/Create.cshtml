@model libraryNaturguiden.Picture

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@if (ViewBag.Error != null)
{
    @ViewBag.Error
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Picture</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Alt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Alt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Format, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ 

                    //TODO: Wrong place to do this

                    var nisse = new List<SelectListItem>();

                    nisse.Add(new SelectListItem
                    {
                        Value = "Album",
                        Text = "Album",
                        Selected = true
                    });
                    nisse.Add(new SelectListItem
                    {
                        Value = "News",
                        Text = "News",
                        Selected = false
                    });
                }
                @Html.DropDownListFor(model => model.Format, nisse, htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Format, "", new { @class = "text-danger" })
                @Html.
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<form id="testform">
    <input type="file" id="file" name="file">
    <input type="submit">
</form>
<script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.1.1.js"></script>
<script>

    $('#testform').submit(function (e) {
        var data;

        data = new FormData();
        data.append( 'file', $( '#file' )[0].files[0] );

        $.ajax({
            url: 'http://localhost:9946/Pictures/UploadImage',
            data: data,
            processData: false,
            contentType: false,
            type: 'POST',
            success: function ( data ) {
                $('#Url').val(data);
            }
        });

        e.preventDefault();
    });

</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
